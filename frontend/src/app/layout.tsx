// src/app/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Link } from "@/navigation";
import Image from "next/image";
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages, getTranslations } from "next-intl/server";
import { headers } from "next/headers";

type Tenant = "cartucho" | "tonershop" | "default";

const LOGOS: Record<Tenant, string> = {
    cartucho: "/logos/cartucho.jpg",
    tonershop: "/logos/tonershop.jpg",
    default: "/logos/sneltoner.jpg",
};

export const metadata: Metadata = {
    title: "Cartridge site 2.0 test",
    description: "Generated by create next app",
};

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

export default async function RootLayout({ children }: { children: React.ReactNode }) {
    const locale = await getLocale();
    const h = await headers();
    const tenant = (h.get("x-tenant") ?? "default") as Tenant;

    // messages met fallback (zoals je al had)
    let messages: Record<string, unknown>;
    try {
        messages = await getMessages();
    } catch {
        messages = (await import("@/messages/nl.json")).default as Record<string, unknown>;
    }

    // âœ… Server-side translations voor de header
    const t = await getTranslations("nav");

    return (
        <html lang={locale} data-tenant={tenant} suppressHydrationWarning>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider messages={messages} locale={locale} key={locale}>
            <header className="text-black p-4 flex items-center justify-center">
                <Link href="/">
                    <Image src={LOGOS[tenant]} alt="Logo" width={128} height={128} />
                </Link>
                <nav className="ml-8">
                    <ul className="flex space-x-6">
                        <li><Link href="/" className="hover:text-gray-600">{t("home")}</Link></li>
                        <li><Link href="/products" className="hover:text-gray-600">{t("products")}</Link></li>
                        <li><Link href="/cart" className="hover:text-gray-600">{t("cart")}</Link></li>
                        <li><Link href="/contact" className="hover:text-gray-600">{t("contact")}</Link></li>
                    </ul>
                </nav>
            </header>

            {children}
        </NextIntlClientProvider>
        </body>
        </html>
    );
}